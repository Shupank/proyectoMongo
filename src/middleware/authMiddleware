const jwt = require('jsonwebtoken');
const User = require('../models/userModel');

const protect = async (req, res, next) => {
  let token;

  if (req.headers.authorization && req.headers.authorization.startsWith('Bearer')) {
    try {
      // Obtener el token del encabezado de la solicitud
      token = req.headers.authorization.split(' ')[1];

      // Verificar el token y decodificarlo
      const decoded = jwt.verify(token, process.env.JWT_SECRET);

      // Encontrar al usuario por el ID decodificado (excluyendo la contraseña)
      req.user = await User.findById(decoded.id).select('-password');
      if (!req.user) {
        return res.status(401).json({ message: 'Usuario no encontrado. Token inválido.' });
      }

      next(); // Continuar al siguiente middleware/controlador

    } catch (error) {
      res.status(401).json({ message: 'No autorizado, token fallido' });
    }
  } else {
    res.status(401).json({ message: 'No autorizado, no hay token' });
  }
};

module.exports = protect;
